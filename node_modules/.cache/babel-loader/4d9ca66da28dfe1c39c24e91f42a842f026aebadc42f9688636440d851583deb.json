{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEnovO\\\\Desktop\\\\react\\\\app\\\\newFolder\\\\newFolder2\\\\src\\\\pages\\\\CreatePosts.js\",\n  _s = $RefreshSig$();\n// import { useState, createContext, useContext } from \"react\";\n// import { postContext } from '../App';\n// import { Navigate, useNavigate } from \"react-router-dom\";\n// import SinglePostPage from \"../components/SinglePostPage\";\n// import { news } from \"../data/NewsCard\";\n\n// function CreatePost () {\n//     const navigate = useNavigate()\n//     const { posts, setPosts } = useContext(postContext)\n//     const currentDate = new \n//     Date().toLocaleString()\n\n//     const [ post, setPost ] = useState({\n//         id: posts.length + 1,\n//         image: \"/img/img1.jpg\",\n//         date: currentDate,\n//         title: '',\n//         text: ''\n//     })\n\n//     const CreatePostHandler = () => {\n//         setPosts(prev => {\n//             return [...prev, post]\n//         })\n\n//         alert('Add a NEW post!')\n\n//         setTimeout(() => {\n//             navigate('/blog')\n//         }, 1500)\n\n//         console.log(posts)\n//     }\n\n//     const handleAddPost =(post) => {\n//         setPosts(prev => [...prev, post]);\n//         post.push(setPosts)\n//       return (\n//         <div>\n//           <CreatePost onAddPost={handleAddPost} />\n//           <SinglePostPage news={news} />\n//         </div>\n//       );\n//     }\n\n//     const inputHandler = (e) => {\n//         const name = e.target.name;\n//         setPost(prev => ({...prev, [name]: e.target.value}))\n//     }\n\n//     return(\n//         <div>\n//             <h2 className=\"create-post\">Create Post</h2>\n//             <div className=\"create-form\">\n//                 <input className=\"create-input\" name='title' onChange={(e) => {inputHandler(e)}} type=\"text\" placeholder=\"Title\" />\n//                 <br />\n//                 <textarea className=\"create-text\" name='text' onChange={(e) => {inputHandler(e)}} placeholder=\"Write your text...\" />\n//                 <div><button className=\"create-btn\" onClick={CreatePostHandler}>Create</button></div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default CreatePost;\n\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost() {\n  _s();\n  const dispatch = useDispatch();\n  const CreatePostHandler = () => {\n    dispatch(addPost(post));\n    setPosts(prev => {\n      return [...prev, post];\n    });\n    alert('Add a NEW post!');\n    setTimeout(() => {\n      navigate('/blog');\n    }, 1500);\n  };\n  const navigate = useNavigate();\n  //   const { posts, setPosts } = useContext(postContext)\n  const currentDate = new Date().toLocaleString();\n  const [post, setPost] = useState({\n    id: posts.length + 1,\n    image: \"/img/img1.jpg\",\n    date: currentDate,\n    title: '',\n    text: ''\n  });\n  const handleAddPost = post => {\n    setPosts(prev => [...prev, post]);\n    post.push(setPosts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        onAddPost: handleAddPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SinglePostPage, {\n        news: news\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  };\n  const inputHandler = e => {\n    const name = e.target.name;\n    setPost(prev => ({\n      ...prev,\n      [name]: e.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"create-post\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-input\",\n        name: \"title\",\n        onChange: e => {\n          inputHandler(e);\n        },\n        type: \"text\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"create-text\",\n        name: \"text\",\n        onChange: e => {\n          inputHandler(e);\n        },\n        placeholder: \"Write your text...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-btn\",\n          onClick: CreatePostHandler,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 7\n  }, this);\n}\n_s(CreatePost, \"ySOCLm3VVPomrrhfwLvJCfBAafE=\", true, function () {\n  return [useDispatch];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useDispatch","addPost","jsxDEV","_jsxDEV","CreatePost","_s","dispatch","CreatePostHandler","post","setPosts","prev","alert","setTimeout","navigate","useNavigate","currentDate","Date","toLocaleString","setPost","useState","id","posts","length","image","date","title","text","handleAddPost","push","children","onAddPost","fileName","_jsxFileName","lineNumber","columnNumber","SinglePostPage","news","inputHandler","e","name","target","value","className","onChange","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LEnovO/Desktop/react/app/newFolder/newFolder2/src/pages/CreatePosts.js"],"sourcesContent":["// import { useState, createContext, useContext } from \"react\";\r\n// import { postContext } from '../App';\r\n// import { Navigate, useNavigate } from \"react-router-dom\";\r\n// import SinglePostPage from \"../components/SinglePostPage\";\r\n// import { news } from \"../data/NewsCard\";\r\n  \r\n// function CreatePost () {\r\n//     const navigate = useNavigate()\r\n//     const { posts, setPosts } = useContext(postContext)\r\n//     const currentDate = new \r\n//     Date().toLocaleString()\r\n\r\n//     const [ post, setPost ] = useState({\r\n//         id: posts.length + 1,\r\n//         image: \"/img/img1.jpg\",\r\n//         date: currentDate,\r\n//         title: '',\r\n//         text: ''\r\n//     })\r\n\r\n//     const CreatePostHandler = () => {\r\n//         setPosts(prev => {\r\n//             return [...prev, post]\r\n//         })\r\n    \r\n//         alert('Add a NEW post!')\r\n    \r\n//         setTimeout(() => {\r\n//             navigate('/blog')\r\n//         }, 1500)\r\n\r\n//         console.log(posts)\r\n//     }\r\n\r\n//     const handleAddPost =(post) => {\r\n//         setPosts(prev => [...prev, post]);\r\n//         post.push(setPosts)\r\n//       return (\r\n//         <div>\r\n//           <CreatePost onAddPost={handleAddPost} />\r\n//           <SinglePostPage news={news} />\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     const inputHandler = (e) => {\r\n//         const name = e.target.name;\r\n//         setPost(prev => ({...prev, [name]: e.target.value}))\r\n//     }\r\n\r\n//     return(\r\n//         <div>\r\n//             <h2 className=\"create-post\">Create Post</h2>\r\n//             <div className=\"create-form\">\r\n//                 <input className=\"create-input\" name='title' onChange={(e) => {inputHandler(e)}} type=\"text\" placeholder=\"Title\" />\r\n//                 <br />\r\n//                 <textarea className=\"create-text\" name='text' onChange={(e) => {inputHandler(e)}} placeholder=\"Write your text...\" />\r\n//                 <div><button className=\"create-btn\" onClick={CreatePostHandler}>Create</button></div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default CreatePost;\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPost } from '../actions';\r\n\r\nfunction CreatePost() {\r\n  const dispatch = useDispatch();\r\n\r\n  const CreatePostHandler = () => {\r\n    dispatch(addPost(post));\r\n\r\n    setPosts(prev => {\r\n        return [...prev, post]\r\n    })\r\n\r\n    alert('Add a NEW post!')\r\n\r\n    setTimeout(() => {\r\n        navigate('/blog')\r\n    }, 1500)\r\n\r\n  }\r\n  const navigate = useNavigate()\r\n//   const { posts, setPosts } = useContext(postContext)\r\n  const currentDate = new Date().toLocaleString()\r\n\r\n  const [ post, setPost ] = useState({\r\n      id: posts.length + 1,\r\n      image: \"/img/img1.jpg\",\r\n      date: currentDate,\r\n      title: '',\r\n      text: ''\r\n  })\r\n\r\n  const handleAddPost =(post) => {\r\n      setPosts(prev => [...prev, post]);\r\n      post.push(setPosts)\r\n    return (\r\n      <div>\r\n        <CreatePost onAddPost={handleAddPost} />\r\n        <SinglePostPage news={news} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const inputHandler = (e) => {\r\n      const name = e.target.name;\r\n      setPost(prev => ({...prev, [name]: e.target.value}))\r\n  }\r\n\r\n  return(\r\n      <div>\r\n          <h2 className=\"create-post\">Create Post</h2>\r\n          <div className=\"create-form\">\r\n              <input className=\"create-input\" name='title' onChange={(e) => {inputHandler(e)}} type=\"text\" placeholder=\"Title\" />\r\n              <br />\r\n              <textarea className=\"create-text\" name='text' onChange={(e) => {inputHandler(e)}} placeholder=\"Write your text...\" />\r\n              <div><button className=\"create-btn\" onClick={CreatePostHandler}>Create</button></div>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default CreatePost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}