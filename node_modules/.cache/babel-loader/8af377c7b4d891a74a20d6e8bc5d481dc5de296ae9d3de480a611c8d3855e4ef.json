{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEnovO\\\\Desktop\\\\react\\\\app\\\\newFolder\\\\newFolder2\\\\src\\\\components\\\\SinglePostPage.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport BackButton from './BackButton';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SinglePostPage = () => {\n  _s();\n  const id = useLocation().pathname.split('/')[2];\n  const posts = useSelector(state => state.posts);\n  // const currentPost = posts.find(post => post.id === Number(id));\n  const postId = 123; // id искомого поста\n  const post = posts.filter(post => post.id === postId)[0];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post-title\",\n        children: currentPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post-img\",\n          src: currentPost.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-text\",\n          children: [\" \", currentPost.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SinglePostPage, \"re8aNcEHxxSbMdc9PUUnoYPjSbo=\", false, function () {\n  return [useLocation, useSelector];\n});\n_c = SinglePostPage;\nexport default SinglePostPage;\nvar _c;\n$RefreshReg$(_c, \"SinglePostPage\");","map":{"version":3,"names":["useLocation","BackButton","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","SinglePostPage","_s","id","pathname","split","posts","state","postId","post","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","currentPost","title","src","image","text","_c","$RefreshReg$"],"sources":["C:/Users/LEnovO/Desktop/react/app/newFolder/newFolder2/src/components/SinglePostPage.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport BackButton from './BackButton';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport const SinglePostPage = () => {\r\n    const id = useLocation().pathname.split('/')[2];\r\n    const posts = useSelector(state => state.posts);\r\n    // const currentPost = posts.find(post => post.id === Number(id));\r\n    const postId = 123; // id искомого поста\r\n    const post = posts.filter(post => post.id === postId)[0];\r\n  \r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <BackButton />\r\n                <h3 className=\"post-title\">{currentPost.title}</h3>\r\n                <div className=\"post-content\">\r\n                    <img className=\"post-img\" src={currentPost.image} />\r\n                    <p className=\"post-text\"> {currentPost.text}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SinglePostPage;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,EAAE,GAAGT,WAAW,CAAC,CAAC,CAACU,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAMC,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAC/C;EACA,MAAME,MAAM,GAAG,GAAG,CAAC,CAAC;EACpB,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKK,MAAM,CAAC,CAAC,CAAC,CAAC;EAGxD,oBACIV,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACIb,OAAA;MAAAa,QAAA,gBACIb,OAAA,CAACH,UAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdjB,OAAA;QAAIkB,SAAS,EAAC,YAAY;QAAAL,QAAA,EAAEM,WAAW,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDjB,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAAAL,QAAA,gBACzBb,OAAA;UAAKkB,SAAS,EAAC,UAAU;UAACG,GAAG,EAAEF,WAAW,CAACG;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDjB,OAAA;UAAGkB,SAAS,EAAC,WAAW;UAAAL,QAAA,GAAC,GAAC,EAACM,WAAW,CAACI,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAGX,CAAC;AAAAb,EAAA,CArBYD,cAAc;EAAA,QACZP,WAAW,EACRE,WAAW;AAAA;AAAA0B,EAAA,GAFhBrB,cAAc;AAuB3B,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}